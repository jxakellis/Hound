
Add conformance to DropDownUIViewDataSourceProtocol



    //MARK: - DropDownUIViewDataSourceProtocol
    
    private let dropDown = DropDownUIView()
    
    private let dropDownRowHeight: CGFloat = 30
    
    func setupCellForDropDown(cell: UITableViewCell, indexPath: IndexPath, DropDownUIViewIdentifier: String) {
        if DropDownUIViewIdentifier == "DROP_DOWN_NEW"{
            
            let customCell = cell as! DropDownDefaultTableViewCell
            customCell.adjustLeadingTrailing(newConstant: 12.0)
            
            //adjust customCell based on indexPath
            
        }
    }
    
    func numberOfRows(forSection: Int, DropDownUIViewIdentifier: String) -> Int {
    
        //return number of rows based on section, given the DropDownUIViewIdentifier
        
    }
    
    func numberOfSections(DropDownUIViewIdentifier: String) -> Int {
        
        //return the number of sections given the DropDownUIViewIdentifier
        
    }
    
    func selectItemInDropDown(indexPath: IndexPath, DropDownUIViewIdentifier: String) {
        
        //do actions based on a cell selected at a indexPath given a DropDownUIViewIdentifier
        //want to hide the drop down after something is selected
        
        let selectedCell = dropDown.dropDownTableView!.cellForRow(at: indexPath) as! DropDownDefaultTableViewCell
            
        selectedCell.didToggleSelect(newSelectionStatus: BOOL)
            
        self.dropDown.hideDropDown()
    }
    
    //MARK: - Drop Down Functions
    
    private func setUpDropDown(){
        dropDown.DropDownUIViewIdentifier = "DROP_DOWN_NEW"
        dropDown.cellReusableIdentifier = "dropDownCell"
        dropDown.DropDownUIViewDataSourceProtocol = self
        dropDown.setUpDropDown(viewPositionReference: frameOfBorderedLabel, offset: 0.0)
        dropDown.nib = UINib(nibName: "DropDownDefaultTableViewCell", bundle: nil)
        dropDown.setRowHeight(height: self.dropDownRowHeight)
        self.view.addSubview(dropDown)
    }
    
    @objc private func hideDropDown(){
        dropDown.hideDropDown()
    }
    
    //MARK: - Main
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        setUpDropDown()
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        dropDown.hideDropDown(removeFromSuperview: true)
    }
    
    self.dropDown.showDropDown(height: dropDownRowHeight * 6.5, selectedIndexPath: INDEXPATH)
        let tap = UITapGestureRecognizer(target: self, action: #selector(hideDropDown))
        tap.delegate = self
        tap.cancelsTouchesInView = false
        containerView.addGestureRecognizer(tap)
        
    @IBAction private func FUNCTIONNAME(_ sender: Any) {
        
        self.dropDown.showDropDown(height: dropDownRowHeight * 6.5 (if content dynamic change to dynamic value), selectedIndexPath: self.filterIndexPath)
        
    }
    
    
    
