
ORIGINAL Future Implementation Needed

2/23/2021

**    Add logging record feature?

Home Page
    Change alarms to reminders (and change home in tabbar to reminders)
    Add display to show when timer was last executed, do not integrate pause with it as it should show how long from it was last executed
    Add three different options for when the alarm goes off, turn off (change isEnabled), one for remind shortly/ snooze (e.g. 30 minutes) and one for reset alarm (already implemented)
    Decrease precision when converting time to string, if over an hour show hours and minutes, if under an hour show minutes no seconds, and only show seconds under a minute
    
Dogs
    Change from dogs overview to dogs configeration
    Add editting for a requirement
    Add nudge/error if trying to add a dog with no requirements
    
    AddDog
        Add title to the top like the tab bar pages, e.g. Create Dog
        Hide big green and back when adding a requirement/need to a dog, how dad fumbled when not clicking addToList before hitting big green to update/add dog.
        Change from needs to reminders in all parts
        Change embedded Add need thing from Add A Need to Create reminder
        When adding a need/reminder change back arrow from <Needs to just <
        Change from Add To List to Add (tab bar button)

AlertController
    Create different Utils for willShowDogReminder (? on name) instead of willShowAlert as wSDR will have three button but wSA will only have the ok button
    
2/28/2021

Potentially restructure sender system into two components: localizedSneder and originSender
Origin sender: Will store the very root call of the function, where a user action (i believe in most cases) called some function to trigger a series of events.
Localized sender: Will store the last class to handle the function call.

This will allow for the class having the information passed to it to know what direction to route it in without having to compare originSender to every possible class. For example HomeMainScreenTableView could make a dogManager change, the origin sender would be itself, when it reaches MainTabBarViewController, the localized sender would be HomeViewController, as it just passed the information to MTBVC but the origin sender would still be HMSTVC. This would potentislly solve bugs where through the passage of information and updating, the class of the originSender is reached again and without this functionality once the class is reached it would update/change information that was already handled when it made that original function call (which started the chain).

3/17/2021

Create default schedule that is based off researched numbers for users when they first launch the app, basically just modify the default dog a tiny bit so it has accurate real life numbers.

Time of day
    Add checkbox when time of day is selected when creating/updating reminder where user can select a certain time interval to be reminded after the task is completed (NOT SNOOZED). Potentially call it (when showing alarm) Post-Task Reminder and say at the bottom when configuring the requirement "Remind me again (DATE PICKER) after this reminder"
    TECH INFO:
        Compartmentalize requirements so it has two different classes inside, one thats countdown components which has all of the current things and then add TimeOfDay components that can store time of day. Right now only one time of day reminder is needed but DO NOT build functionality for multiple time of day reminders within one requirement as it will add to much completity. Potentially add later but dad said not to.

Change add button to an animated button. Make little pop ups for different options. Example: If you have three dogs, make pop ups above blue add button (bottom to top in this order) Add A Dog, Add A reminder for Penny, Add a reminder for Fido, Add a reminder for Penny, and Add a reminder for Ginger

Add always present chevron.right to the dogs page to indicate that it is editable, make no function changes but just chevron to the right of the toggle on off button to show that you can click the cell to edit it.
    Add a enable/disable slide when editting a dog so you can turn it off while on edit menu, also add the enable/disable to the tableview of reminders when editting a dog. This is the functionality already on the Dogs Configuration home page but add it so it is accessable when editting a dog.

4/5/2021

Change Home Screen
    REQUIREMENT DISPLAY-
        Disable and remove "since last time" (leave in data structure for future)
    LOGGING REQUIREMENT - Allow a requirement to be clicked and pop up an action sheet of options isntead of convertion cells to requirement log. Remove snooze and disable from options, allow the only option as either log or skip next alarm (depending on whether it is countdown or time of day). Hide (don't completely axe) blue button as it is implicit. Add chevron to indicate clickability.
    
Take off the disable button for when a requirement is executed as it can be fat fingered

Change bella defaults
    Breakfast at 7 am
    Dinner at 5 pm
    Potty every 2 hours
    
Turn on follow up reminder by default

For count down requirement, when displaying its time interval, change from "TI" to every "TI" e.g. 3 Hours -> Every 3 Hours

Stop displaying dog description on dogs configuration, keep in data model, disable and hide input fields

When launching for the first time, have entry page as configure dogs and not home screen dispaly

4/11/2021

Remove cancel snooze option when clicking on a reminder on the home screen

Change cancel button when you have a .alert alertController when a reminder goes off to make the reminder enabled but inactive, i.e. say no more time left and leave it to sit there until handled e.g. clicking Did it!

Handle how i want but change skip next reminder to did it and unskip to undid it?, up to me to figure out exact edge case

Sound when alert pops up in app (vibration?)

Font awesome?

Icon for app (explore art teacher)

App name exploration, link into words in the work of puppy training and house breaking. Explore amazon for example.

Write app store description, should be used in app story obviously but also given to usability testers (in additon to what they should try to do)

Work on logs page
